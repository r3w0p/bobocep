name: CICD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ "3.9", "3.10" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install coverage==6.3.2 flake8==4.0.1 mypy==0.950

      - name: Lint with Flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 ./src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ./tests --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Type check with mypy
        run: |
          mypy ./src
          mypy ./tests

      - name: Test with pytest
        run: |
          coverage run --source=src -m pytest tests

      - name: Upload coverage to Code Climate
        uses: paambaati/codeclimate-action@v2.5.3
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_REPORTER_ID }}
        with:
          coverageCommand: coverage xml
  cd:
    name: CD
    needs: ci
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.9" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user

      - name: Build binary wheel and source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
